'''
Common functions used in pxdlib.
'''

from uuid import uuid1


def uuid():
    return str(uuid1()).upper()


def num(number):
    '''
    Return float (or int, if an integer)
    '''
    n = float(number)
    n_int = int(number)
    return n_int if n_int == n else n


def hexbyte(val):
    '''Turn a number to two hex digits.'''
    assert 0 <= val <= 255
    return hex(round(val))[2:].zfill(2)


def dicts(*dicts, **kwargs):
    '''
    Concatenate dictionaries such that defaults are on the left.

    Equivalent to | chaining in Python 3.9.
    '''
    result = dict()
    for d in dicts:
        result.update(d)
    result.update(kwargs)
    return result


def tupleBuddy(prop, names):
    '''
    Return a class mixin which has accessors for a property's members.
    '''
    code = 'class helper:'
    for i, n in enumerate(names):
        code += f'''
    @property
    def {n}(self):
        return self.{prop}[{i}]
    
    @{n}.setter
    def {n}(self, val):
        vals = list(self.{prop})
        vals[{i}] = val
        self.{prop} = tuple(vals)
'''
    l = locals()
    exec(code, {}, l)
    helper = l['helper']
    helper.__name__ = f'{prop}Helper'
    helper.__doc__ = f'Auto-generated by `tupleBuddy({prop}, {names})`.'
    return helper


SizeHelper = tupleBuddy('size', ('width', 'height'))
PosHelper = tupleBuddy('position', ('x', 'y'))
